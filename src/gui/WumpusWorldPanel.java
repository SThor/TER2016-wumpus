/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import model.WumpusWorld;
import model.observations.Scenario;

/**
 *
 * @author silmathoron
 */
public class WumpusWorldPanel extends javax.swing.JPanel {

    private Scenario scenario;
    private WumpusWorld wumpusWorld;
    private int instant = 0;
    private int cellHeight;
    private int cellWidth;
    private int xShift;
    private int yShift;
    private int fontSize;
    private int xLetterShift;
    private int yLetterShift;
    private Graphics2D g2;

    /**
     * Creates new form WumpusWorldPanel
     */
    public WumpusWorldPanel() {
        initComponents();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        g2 = (Graphics2D) g;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        //g2.drawString("It's a Wumpus World", 20, 20);
        if (scenario != null && wumpusWorld != null) {
            computeConstants();
            paintGrid();
            paintObjects();
        }
    }

    public void setScenario(Scenario scenario) {
        this.scenario = scenario;
    }

    public void setWumpusWorld(WumpusWorld wumpusWorld) {
        this.wumpusWorld = wumpusWorld;
    }

    public void setInstant(int instant) {
        this.instant = instant;
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void paintGrid() {
        for (int i = 0; i < wumpusWorld.getHeight(); i++) {
            for (int j = 0; j < wumpusWorld.getWidth(); j++) {
                int x = (j * cellWidth) + xShift;
                int y = (i * cellHeight) + yShift;
                g2.drawRect(x, y, cellWidth, cellHeight);
            }
        }
    }

    private void computeConstants() {
        int gridWidth = cellWidth * wumpusWorld.getWidth();
        int gridHeight = cellHeight * wumpusWorld.getHeight();
        int panelWidth = getWidth();
        int panelHeight = getHeight();
        xShift = (panelWidth - gridWidth) / 2;
        yShift = (panelHeight - gridHeight) / 2;

        cellHeight = panelHeight / 5;
        cellWidth = panelWidth / 5;

        int min = Math.min(cellWidth, cellHeight);
        fontSize = (int) (min * 0.9);
        xLetterShift = (cellWidth - fontSize / 2) / 2;
        yLetterShift = (cellHeight - fontSize) / 2;
    }

    private void paintObjects() {
        paintAgent(0, 0, true, true, true);
//        paintWumpus();
//        paintGold();
//        paintPit();
    }

    private void paintAgent(int agentX, int agentY, boolean isAlive, boolean hasGold, boolean hasShot) {
        g2.setFont(new Font(Font.MONOSPACED, Font.PLAIN, fontSize));
        int x = (int) ((agentX * cellWidth) + xShift + xLetterShift + (cellWidth * 0.3));
        int y = (int) ((agentY * cellHeight) + yShift + yLetterShift + (cellHeight * 0.8));
        g2.drawString("A", x, y);
    }

    private void paintWumpus(int x, int y, boolean isAlive) {

    }

    private void paintGold(int x, int y, boolean isPickedUp) {

    }

    private void paintPit(int x, int y) {

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
